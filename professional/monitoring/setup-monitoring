#! /bin/bash -e

SCRIPT=$(readlink -f "$0")
SCRIPTPATH=$(dirname "$SCRIPT")
source ${SCRIPTPATH}/vars

# Monitoring
kubectl apply -f ${SCRIPTPATH}/namespace.yml
helm install stable/prometheus \
    -f ${SCRIPTPATH}/prometheus/values.yaml \
    --namespace monitoring \
    --name prometheus

kubectl apply -f monitoring/grafana/config.yml
helm install stable/grafana \
    -f ${SCRIPTPATH}/grafana/values.yml \
    --namespace monitoring \
    --name grafana

pass=$(kubectl get secret --namespace monitoring grafana -o jsonpath="{.data.admin-password}" | base64 --decode)

kubectl delete pv --all -n monitoring
kubectl delete pvc --all -n monitoring

echo "## Waiting for 5 seconds to delete pvs"
sleep 5
kubectl apply -f ${SCRIPTPATH}/prometheus/prometheus-pv.yaml
kubectl apply -f ${SCRIPTPATH}/prometheus/prometheus-pvc.yaml

kubectl apply -f ${SCRIPTPATH}/prometheus/alertmanager-pv.yaml
kubectl apply -f ${SCRIPTPATH}/prometheus/alertmanager-pvc.yaml

echo "## Open Grafana and Prometheus ports for k8s nodes"
gcloud compute firewall-rules create allow-${PROM_PORT} \
  --allow tcp:${PROM_PORT} \
  --target-tags worker \
  --network ${NETWORK} \
  --source-ranges 0.0.0.0/0

gcloud compute firewall-rules create allow-${GRAFANA_PORT} \
  --allow tcp:${GRAFANA_PORT} \
  --target-tags worker \
  --network ${NETWORK} \
  --source-ranges 0.0.0.0/0

PUB_IP=$(gcloud compute instances describe worker-0 --format='get(networkInterfaces[0].accessConfigs[0].natIP)')

echo "## Login to Grafana with below creds :"
echo "Url  : http://${PUB_IP}:${GRAFANA_PORT}/"
echo "user : admin"
echo "pass : ${pass}"
